// https://leetcode.com/problems/maximum-width-ramp/

pub struct Solution;

impl Solution {
    pub fn max_width_ramp(nums: Vec<i32>) -> i32 {
        assert!(nums.len() >= 2);
        assert!(nums.len() <= 50000);
        let mut stack = vec![];
        for (i, &num) in nums.iter().enumerate() {
            if stack.is_empty() || nums[*stack.last().unwrap() as usize] > num {
                stack.push(i as u16);
            }
        }
        let mut max = 0;
        for (j, &num) in nums.iter().enumerate().rev() {
            while !stack.is_empty() && nums[*stack.last().unwrap() as usize] <= num {
                max = std::cmp::max(max, j as u16 - stack.pop().unwrap());
            }
        }
        max as i32
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    fn test(nums: &[u16], expected: u16) {
        assert!(nums.len() >= 2);
        assert!(nums.len() <= 50000);
        for &num in nums {
            assert!(num <= 50000);
        }
        assert_eq!(
            Solution::max_width_ramp(nums.into_iter().map(|&x| x as i32).collect()),
            expected as i32
        )
    }

    #[test]
    fn ex1() {
        test(&[6, 0, 8, 2, 1, 5], 4)
    }

    #[test]
    fn ex2() {
        test(&[9, 8, 1, 0, 1, 9, 4, 0, 4, 1], 7)
    }

    #[test]
    fn discussion_case1() {
        test(&[2, 2, 1], 1)
    }

    #[test]
    fn discussion_case2() {
        test(
            &[
                29, 28, 28, 26, 25, 24, 9, 23, 21, 9, 18, 17, 14, 12, 3, 11, 10, 8, 8, 10, 22, 6,
                5, 20, 5, 2, 1, 1, 1, 0,
            ],
            17,
        )
    }

    #[test]
    fn discussion_case3() {
        test(
            &[
                999, 998, 997, 995, 993, 992, 992, 991, 991, 990, 989, 989, 988, 987, 986, 985,
                983, 978, 978, 978, 978, 977, 977, 975, 975, 974, 973, 972, 971, 970, 970, 968,
                968, 967, 967, 966, 965, 964, 963, 962, 962, 961, 960, 960, 960, 959, 957, 956,
                955, 955, 953, 953, 953, 952, 951, 950, 946, 946, 944, 944, 942, 941, 941, 940,
                940, 940, 938, 937, 935, 934, 934, 933, 933, 931, 930, 930, 929, 929, 929, 928,
                927, 926, 925, 925, 925, 923, 923, 919, 918, 915, 915, 914, 913, 913, 912, 912,
                911, 910, 909, 908, 907, 907, 907, 907, 907, 899, 898, 896, 895, 895, 895, 894,
                893, 892, 891, 890, 889, 888, 888, 887, 887, 887, 886, 886, 883, 882, 882, 882,
                880, 878, 877, 877, 877, 876, 876, 876, 875, 874, 874, 872, 871, 871, 871, 870,
                869, 868, 867, 866, 865, 865, 865, 864, 861, 855, 855, 855, 851, 851, 851, 848,
                847, 846, 845, 845, 844, 843, 842, 841, 840, 840, 838, 838, 836, 834, 833, 833,
                832, 830, 828, 828, 827, 826, 825, 825, 825, 824, 822, 822, 819, 819, 819, 816,
                815, 814, 813, 813, 812, 812, 811, 810, 810, 810, 810, 808, 808, 807, 806, 805,
                804, 801, 801, 799, 798, 798, 797, 796, 87, 793, 792, 791, 791, 789, 787, 784, 784,
                778, 777, 776, 776, 775, 774, 774, 773, 771, 771, 769, 768, 767, 767, 767, 766,
                765, 765, 764, 762, 761, 760, 759, 758, 758, 756, 754, 752, 751, 750, 750, 750,
                750, 749, 749, 748, 747, 747, 746, 746, 746, 745, 744, 744, 741, 741, 741, 740,
                739, 739, 738, 737, 737, 737, 734, 733, 732, 732, 731, 731, 730, 729, 726, 726,
                725, 725, 725, 723, 722, 722, 722, 720, 716, 716, 716, 716, 713, 713, 711, 709,
                708, 708, 707, 706, 704, 704, 703, 702, 700, 699, 699, 697, 696, 696, 696, 695,
                694, 694, 692, 449, 692, 690, 690, 690, 689, 688, 687, 687, 171, 686, 683, 683,
                682, 682, 682, 680, 680, 680, 679, 678, 677, 677, 676, 676, 676, 676, 675, 674,
                673, 669, 669, 668, 668, 666, 927, 665, 665, 665, 662, 661, 661, 660, 659, 657,
                655, 655, 654, 653, 653, 652, 652, 651, 650, 646, 646, 645, 644, 643, 642, 639, 81,
                636, 632, 631, 630, 628, 625, 623, 623, 623, 622, 621, 620, 620, 618, 618, 618,
                614, 610, 609, 609, 608, 607, 606, 606, 605, 605, 603, 603, 602, 601, 601, 601,
                600, 600, 599, 598, 596, 595, 594, 593, 593, 593, 592, 592, 592, 591, 591, 589,
                588, 586, 586, 585, 584, 584, 583, 582, 582, 578, 576, 576, 576, 575, 572, 572,
                572, 570, 570, 569, 569, 568, 566, 566, 565, 563, 562, 560, 560, 560, 556, 555,
                554, 551, 551, 550, 550, 548, 548, 548, 546, 546, 546, 545, 544, 543, 980, 541,
                540, 539, 536, 536, 533, 533, 530, 529, 529, 529, 529, 527, 525, 525, 523, 520,
                520, 519, 517, 516, 516, 515, 514, 511, 509, 508, 508, 507, 504, 503, 502, 500,
                500, 499, 498, 497, 496, 496, 494, 492, 490, 490, 490, 488, 487, 486, 485, 686,
                484, 482, 480, 480, 480, 480, 479, 479, 479, 478, 477, 476, 475, 475, 473, 473,
                471, 471, 470, 469, 469, 468, 468, 466, 466, 463, 759, 461, 460, 460, 459, 457,
                457, 455, 454, 453, 453, 452, 451, 450, 449, 448, 447, 446, 443, 439, 438, 437,
                436, 435, 435, 433, 433, 430, 429, 427, 427, 423, 422, 422, 419, 419, 418, 417,
                414, 412, 409, 407, 406, 405, 403, 402, 402, 401, 400, 397, 397, 393, 392, 392,
                390, 388, 388, 387, 387, 387, 386, 386, 383, 383, 382, 381, 380, 378, 378, 377,
                376, 376, 375, 373, 373, 369, 369, 369, 368, 366, 365, 992, 364, 363, 363, 363,
                362, 362, 361, 360, 359, 359, 359, 356, 356, 355, 354, 353, 352, 351, 351, 350,
                349, 348, 347, 347, 346, 344, 341, 341, 341, 340, 337, 337, 336, 335, 334, 333,
                332, 331, 329, 329, 329, 328, 326, 326, 325, 324, 324, 320, 319, 317, 315, 314,
                314, 313, 312, 310, 309, 309, 308, 308, 307, 306, 306, 305, 305, 301, 301, 300,
                300, 297, 294, 294, 294, 294, 293, 293, 292, 291, 291, 291, 290, 288, 286, 285,
                284, 284, 282, 280, 280, 278, 275, 273, 272, 272, 271, 269, 269, 268, 268, 267,
                267, 265, 264, 262, 261, 260, 258, 257, 256, 251, 251, 250, 248, 248, 247, 244,
                244, 243, 243, 241, 238, 232, 231, 230, 230, 229, 229, 228, 227, 226, 226, 225,
                224, 222, 221, 220, 219, 219, 217, 216, 216, 215, 214, 212, 212, 211, 209, 209,
                206, 205, 205, 205, 205, 203, 203, 202, 201, 201, 201, 200, 200, 199, 199, 198,
                198, 198, 197, 196, 196, 195, 190, 189, 189, 189, 189, 188, 186, 185, 185, 185,
                185, 184, 184, 183, 183, 183, 181, 181, 177, 177, 176, 176, 175, 175, 172, 171,
                171, 168, 168, 164, 164, 164, 162, 161, 161, 158, 158, 158, 157, 156, 156, 152,
                149, 149, 146, 142, 140, 138, 138, 138, 137, 136, 133, 133, 131, 131, 130, 130,
                128, 128, 128, 127, 127, 125, 124, 122, 120, 119, 119, 119, 119, 118, 116, 115,
                115, 115, 115, 113, 112, 110, 109, 108, 108, 106, 106, 105, 104, 101, 100, 99, 97,
                96, 94, 93, 93, 93, 93, 92, 90, 90, 90, 90, 86, 84, 82, 82, 79, 78, 78, 77, 75, 75,
                72, 72, 71, 70, 70, 66, 65, 65, 61, 60, 59, 57, 57, 56, 56, 54, 54, 54, 53, 53, 53,
                52, 50, 50, 49, 49, 49, 47, 47, 46, 45, 44, 43, 43, 43, 41, 40, 38, 37, 36, 36, 36,
                36, 35, 35, 34, 33, 32, 31, 30, 30, 900, 26, 24, 20, 20, 19, 18, 18, 18, 18, 17,
                17, 16, 16, 14, 10, 10, 7, 7, 6, 5, 5, 4, 3, 3, 3, 3, 2, 0,
            ],
            866,
        )
    }

    #[test]
    fn discussion_case4() {
        test(&[2, 7, 2, 2, 7], 4)
    }

    #[test]
    fn discussion_case5() {
        test(&[2, 1, 3], 2)
    }

    #[test]
    fn discussion_case6() {
        test(&[1, 9, 7, 0, 6, 5, 0, 7, 2, 3], 9)
    }

    #[test]
    fn discussion_case7() {
        test(
            &[
                74, 37, 98, 98, 97, 96, 94, 93, 92, 89, 85, 83, 83, 82, 82, 82, 80, 77, 76, 75, 75,
                74, 73, 72, 98, 70, 16, 69, 87, 29, 67, 65, 63, 63, 63, 62, 62, 61, 60, 60, 48, 59,
                58, 53, 53, 53, 52, 52, 50, 12, 47, 47, 46, 46, 43, 43, 42, 40, 38, 38, 92, 35, 35,
                35, 34, 34, 33, 31, 31, 31, 31, 30, 27, 26, 25, 25, 25, 23, 23, 23, 20, 18, 16, 14,
                14, 14, 13, 12, 11, 10, 9, 7, 7, 7, 7, 5, 5, 5, 5, 89,
            ],
            99,
        )
    }

    #[test]
    fn discussion_case8() {
        test(
            &[
                277, 227, 215, 172, 164, 236, 144, 11, 212, 158, 46, 256, 47, 114, 32, 56, 54, 8,
                1, 107, 11, 298, 179, 191, 175, 86, 78, 90, 218, 1, 65, 284, 210, 184, 15, 295,
                265, 248, 35, 7, 23, 114, 265, 138, 220, 58, 27, 93, 52, 16, 206, 299, 52, 285, 34,
                263, 127, 214, 291, 34, 99, 104, 108, 84, 68, 60, 225, 143, 262, 7, 36, 262, 69,
                123, 170, 30, 154, 297, 212, 72, 230, 234, 168, 263, 216, 118, 284, 298, 175, 84,
                280, 12, 50, 233, 73, 139, 193, 158, 49, 181, 236, 90, 170, 297, 189, 87, 270, 34,
                186, 149, 124, 101, 58, 128, 114, 247, 23, 101, 53, 271, 40, 233, 42, 219, 242,
                232, 199, 104, 116, 206, 170, 249, 200, 89, 142, 177, 5, 3, 212, 17, 134, 78, 1,
                163, 215, 262, 241, 110, 130, 23, 264, 90, 105, 43, 99, 210, 91, 259, 68, 121, 173,
                263, 223, 131, 136, 112, 1, 217, 21, 85, 19, 224, 116, 81, 16, 51, 286, 64, 81, 27,
                225, 266, 295, 247, 58, 273, 129, 185, 124, 191, 264, 55, 146, 264, 91, 176, 56,
                165, 14, 132, 127, 38, 30, 251, 287, 181, 45, 285, 71, 48, 54, 163, 48, 151, 210,
                40, 179, 234, 172, 15, 85, 0, 298, 121, 159, 171, 263, 31, 147, 186, 98, 220, 160,
                186, 259, 2, 92, 68, 136, 277, 195, 170, 150, 49, 290, 112, 186, 215, 35, 9, 238,
                287, 80, 210, 158, 49, 62, 280, 208, 85, 288, 26, 35, 8, 270, 272, 204, 248, 181,
                142, 259, 38, 198, 194, 255, 183, 48, 109, 196, 14, 269, 272, 64, 7, 113, 172, 182,
                134, 207, 276, 293, 251, 188, 270, 123, 184, 79, 30, 33, 195,
            ],
            296,
        )
    }

    #[test]
    fn my_extreme_ex1() {
        test(&[50_000; 50_000], 50_000 - 1)
    }

    #[test]
    fn my_extreme_ex2() {
        test(&[0; 50_000], 50_000 - 1)
    }

    #[test]
    fn my_extreme_ex3() {
        let mut nums = vec![0; 50_000];
        nums[0] = 50_000;
        test(&nums, 50_000 - 2)
    }
}
