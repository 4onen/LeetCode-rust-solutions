// https://leetcode.com/problems/maximum-number-of-moves-in-a-grid/

pub struct Solution;

impl Solution {
    pub fn max_moves(grid: Vec<Vec<i32>>) -> i32 {
        let cols = grid[0].len();
        let rows = grid.len();
        assert!(cols >= 2);
        assert!(cols <= 1000);
        assert!(rows >= 2);
        assert!(rows <= 1000);
        let mut last_col_reachable_moves = vec![0; rows];
        let mut cur_col_reachable_moves = vec![0; rows];
        for col in (0..cols - 1).rev() {
            for row in 0..rows {
                let val = grid[row][col];
                let next_moves = [
                    if row < 1 {
                        (0, 0)
                    } else {
                        (grid[row - 1][col + 1], last_col_reachable_moves[row - 1])
                    },
                    (grid[row][col + 1], last_col_reachable_moves[row]),
                    if row + 1 >= rows {
                        (0, 0)
                    } else {
                        (grid[row + 1][col + 1], last_col_reachable_moves[row + 1])
                    },
                ];
                cur_col_reachable_moves[row] = next_moves
                    .into_iter()
                    .filter(|&(v, _)| v > val)
                    .map(|(_, moves)| moves + 1)
                    .max()
                    .unwrap_or(0);
            }
            std::mem::swap(&mut last_col_reachable_moves, &mut cur_col_reachable_moves);
        }
        last_col_reachable_moves.into_iter().max().unwrap()
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    fn test(grid: &[&[i32]], expected: i32) {
        assert!(grid.len() >= 2);
        assert!(grid.len() <= 1000);
        for &col in grid {
            assert!(col.len() >= 2);
            assert!(col.len() <= 1000);
            assert!(grid.len() * col.len() <= 100_000);
            for &el in col {
                assert!(el >= 1);
                assert!(el <= 1_000_000);
            }
        }
        let grid_vec = grid.iter().map(|&x| x.to_vec()).collect();
        assert_eq!(Solution::max_moves(grid_vec), expected);
    }

    #[test]
    fn ex1() {
        test(
            &[
                &[2, 4, 3, 5],
                &[5, 4, 9, 3],
                &[3, 4, 2, 11],
                &[10, 9, 13, 15],
            ],
            3,
        )
    }

    #[test]
    fn ex2() {
        test(&[&[3, 2, 4], &[2, 1, 9], &[1, 1, 7]], 0)
    }

    #[test]
    fn discussion_case1() {
        test(&[&[2, 625152, 3, 5], &[625151, 625152, 9, 3]], 1)
    }

    #[test]
    fn discussion_case2() {
        test(
            &[
                &[
                    1000000, 92910, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
                    1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
                    1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
                    1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
                ],
                &[
                    1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
                    1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
                    1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
                    1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
                ],
            ],
            49,
        )
    }

    #[test]
    fn discussion_case3() {
        test(
            &[
                &[207, 141, 103, 12],
                &[148, 187, 211, 88],
                &[116, 16, 67, 157],
                &[210, 93, 137, 120],
                &[52, 116, 241, 86],
                &[58, 213, 3, 292],
            ],
            3,
        )
    }

    #[test]
    fn discussion_case4() {
        test(
            &[
                &[19, 13, 5, 10, 30, 19, 28],
                &[17, 9, 2, 26, 9, 24, 3],
                &[1, 12, 13, 21, 18, 12, 8],
                &[17, 10, 13, 15, 19, 30, 6],
                &[14, 5, 24, 24, 17, 22, 6],
            ],
            6,
        )
    }

    #[test]
    fn discussion_case5() {
        test(
            &[
                &[27, 134, 137, 68],
                &[265, 270, 273, 72],
                &[217, 41, 165, 61],
                &[40, 269, 19, 75],
                &[143, 152, 15, 260],
                &[149, 173, 38, 63],
                &[184, 151, 26, 258],
                &[171, 278, 112, 37],
                &[142, 191, 269, 244],
            ],
            2,
        )
    }

    #[test]
    fn discussion_case6() {
        test(
            &[
                &[
                    42, 19, 111, 153, 142, 109, 186, 159, 143, 57, 252, 103, 57, 214,
                ],
                &[
                    22, 110, 26, 286, 295, 2, 179, 119, 276, 101, 28, 290, 265, 11,
                ],
                &[
                    27, 35, 69, 186, 47, 145, 284, 250, 32, 117, 8, 161, 106, 175,
                ],
                &[
                    105, 192, 297, 207, 286, 187, 296, 257, 284, 293, 145, 114, 142, 263,
                ],
                &[
                    252, 178, 193, 114, 191, 149, 261, 97, 246, 292, 116, 170, 166, 64,
                ],
                &[
                    12, 155, 266, 291, 58, 91, 177, 6, 299, 29, 110, 200, 205, 170,
                ],
                &[
                    197, 41, 35, 241, 219, 120, 251, 121, 36, 76, 249, 14, 214, 220,
                ],
                &[
                    215, 105, 172, 254, 200, 34, 56, 221, 214, 196, 268, 102, 4, 265,
                ],
            ],
            4,
        )
    }

    #[test]
    fn discussion_case7() {
        test(
            &[
                &[50, 251, 23, 194, 117, 113, 182, 69, 61],
                &[97, 41, 298, 205, 269, 34, 296, 179, 51],
                &[282, 218, 255, 119, 68, 275, 190, 269, 238],
                &[251, 174, 164, 184, 110, 182, 298, 114, 247],
                &[286, 104, 244, 223, 134, 206, 150, 196, 83],
                &[18, 52, 192, 140, 188, 230, 120, 287, 63],
                &[206, 83, 104, 187, 263, 191, 53, 98, 110],
                &[109, 149, 115, 145, 152, 37, 116, 98, 240],
                &[230, 97, 93, 33, 59, 139, 293, 108, 173],
                &[125, 10, 162, 223, 220, 165, 100, 164, 197],
                &[40, 190, 28, 30, 145, 259, 73, 102, 209],
                &[151, 172, 194, 215, 41, 200, 202, 152, 231],
                &[241, 218, 235, 174, 10, 51, 161, 243, 191],
            ],
            6,
        )
    }

    #[test]
    fn discussion_case7_1() {
        test(
            &[
                &[50, 251, 23, 194, 117, 113, 182],
                &[97, 41, 298, 205, 269, 34, 296],
                &[282, 218, 255, 119, 68, 275, 190],
                &[251, 174, 164, 184, 110, 182, 298],
                &[286, 104, 244, 223, 134, 206, 150],
                &[18, 52, 192, 140, 188, 230, 120],
                &[206, 83, 104, 187, 263, 191, 53],
                &[109, 149, 115, 145, 152, 37, 116],
                &[230, 97, 93, 33, 59, 139, 293],
                &[125, 10, 162, 223, 220, 165, 100],
                &[40, 190, 28, 30, 145, 259, 73],
                &[151, 172, 194, 215, 41, 200, 202],
                &[241, 218, 235, 174, 10, 51, 161],
            ],
            6,
        )
    }

    #[test]
    fn discussion_case7_2() {
        test(
            &[
                &[50, 251, 23, 194, 117, 113, 182, 69, 61],
                &[97, 41, 298, 205, 269, 34, 296, 179, 51],
                &[282, 218, 255, 119, 68, 275, 190, 269, 238],
                &[251, 174, 164, 184, 110, 182, 298, 114, 247],
                &[286, 104, 244, 223, 134, 206, 150, 196, 83],
                &[18, 52, 192, 140, 188, 230, 120, 287, 63],
                &[206, 83, 104, 187, 263, 191, 53, 98, 110],
                &[109, 149, 115, 145, 152, 37, 116, 98, 240],
                &[230, 97, 93, 33, 59, 139, 293, 108, 173],
                &[125, 10, 162, 223, 220, 165, 100, 164, 197],
                &[40, 190, 28, 30, 145, 259, 73, 102, 209],
                &[151, 172, 194, 215, 41, 200, 202, 152, 231],
                &[241, 218, 235, 174, 10, 51, 161, 243, 191],
            ],
            6,
        )
    }

    #[test]
    fn discussion_case8() {
        let mut input_line = vec![1; 1000];
        for i in 1..1000 {
            input_line[i - 1] = i as i32;
        }
        test(&[&input_line[..]; 100], 998)
    }
}
